unit_handler.cpp: In constructor ‘UnitHandler::UnitHandler()’:
unit_handler.cpp:6:26: error: use of deleted function ‘std::unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc>::unordered_multimap() [with _Key = Unit; _Tp = int; _Hash = std::hash<Unit>; _Pred = std::equal_to<Unit>; _Alloc = std::allocator<std::pair<const Unit, int> >]’
    6 | UnitHandler::UnitHandler() {
      |                          ^
In file included from /usr/include/c++/9/unordered_map:47,
                 from unit_handler.h:4,
                 from unit_handler.cpp:1:
/usr/include/c++/9/bits/unordered_map.h:1288:7: note: ‘std::unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc>::unordered_multimap() [with _Key = Unit; _Tp = int; _Hash = std::hash<Unit>; _Pred = std::equal_to<Unit>; _Alloc = std::allocator<std::pair<const Unit, int> >]’ is implicitly deleted because the default definition would be ill-formed:
 1288 |       unordered_multimap() = default;
      |       ^~~~~~~~~~~~~~~~~~
/usr/include/c++/9/bits/unordered_map.h:1288:7: error: use of deleted function ‘std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_Hashtable() [with _Key = Unit; _Value = std::pair<const Unit, int>; _Alloc = std::allocator<std::pair<const Unit, int> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<Unit>; _H1 = std::hash<Unit>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, false>]’
In file included from /usr/include/c++/9/unordered_map:46,
                 from unit_handler.h:4,
                 from unit_handler.cpp:1:
/usr/include/c++/9/bits/hashtable.h:414:7: note: ‘std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_Hashtable() [with _Key = Unit; _Value = std::pair<const Unit, int>; _Alloc = std::allocator<std::pair<const Unit, int> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<Unit>; _H1 = std::hash<Unit>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, false>]’ is implicitly deleted because the default definition would be ill-formed:
  414 |       _Hashtable() = default;
      |       ^~~~~~~~~~
/usr/include/c++/9/bits/hashtable.h:414:7: error: use of deleted function ‘std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>::_Hashtable_base() [with _Key = Unit; _Value = std::pair<const Unit, int>; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<Unit>; _H1 = std::hash<Unit>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<true, false, false>]’
In file included from /usr/include/c++/9/bits/hashtable.h:35,
                 from /usr/include/c++/9/unordered_map:46,
                 from unit_handler.h:4,
                 from unit_handler.cpp:1:
/usr/include/c++/9/bits/hashtable_policy.h:1822:5: note: ‘std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>::_Hashtable_base() [with _Key = Unit; _Value = std::pair<const Unit, int>; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<Unit>; _H1 = std::hash<Unit>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<true, false, false>]’ is implicitly deleted because the default definition would be ill-formed:
 1822 |     _Hashtable_base() = default;
      |     ^~~~~~~~~~~~~~~
/usr/include/c++/9/bits/hashtable_policy.h:1822:5: error: use of deleted function ‘std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true>::_Hash_code_base() [with _Key = Unit; _Value = std::pair<const Unit, int>; _ExtractKey = std::__detail::_Select1st; _H1 = std::hash<Unit>; _H2 = std::__detail::_Mod_range_hashing]’
/usr/include/c++/9/bits/hashtable_policy.h:1373:7: note: ‘std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true>::_Hash_code_base() [with _Key = Unit; _Value = std::pair<const Unit, int>; _ExtractKey = std::__detail::_Select1st; _H1 = std::hash<Unit>; _H2 = std::__detail::_Mod_range_hashing]’ is implicitly deleted because the default definition would be ill-formed:
 1373 |       _Hash_code_base() = default;
      |       ^~~~~~~~~~~~~~~
/usr/include/c++/9/bits/hashtable_policy.h:1373:7: error: use of deleted function ‘std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_Hashtable_ebo_helper() [with int _Nm = 1; _Tp = std::hash<Unit>]’
/usr/include/c++/9/bits/hashtable_policy.h:1096:7: note: ‘std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_Hashtable_ebo_helper() [with int _Nm = 1; _Tp = std::hash<Unit>]’ is implicitly deleted because the default definition would be ill-formed:
 1096 |       _Hashtable_ebo_helper() = default;
      |       ^~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/9/bits/hashtable_policy.h:1096:7: error: use of deleted function ‘std::hash<Unit>::hash()’
In file included from /usr/include/c++/9/string_view:43,
                 from /usr/include/c++/9/bits/basic_string.h:48,
                 from /usr/include/c++/9/string:55,
                 from /usr/include/c++/9/stdexcept:39,
                 from /usr/include/c++/9/optional:38,
                 from /usr/include/c++/9/bits/node_handle.h:39,
                 from /usr/include/c++/9/bits/stl_tree.h:72,
                 from /usr/include/c++/9/map:60,
                 from unit_handler.h:3,
                 from unit_handler.cpp:1:
/usr/include/c++/9/bits/functional_hash.h:101:12: note: ‘std::hash<Unit>::hash()’ is implicitly deleted because the default definition would be ill-formed:
  101 |     struct hash : __hash_enum<_Tp>
      |            ^~~~
/usr/include/c++/9/bits/functional_hash.h:101:12: error: no matching function for call to ‘std::__hash_enum<Unit, false>::__hash_enum()’
/usr/include/c++/9/bits/functional_hash.h:82:7: note: candidate: ‘std::__hash_enum<_Tp, <anonymous> >::__hash_enum(std::__hash_enum<_Tp, <anonymous> >&&) [with _Tp = Unit; bool <anonymous> = false]’
   82 |       __hash_enum(__hash_enum&&);
      |       ^~~~~~~~~~~
/usr/include/c++/9/bits/functional_hash.h:82:7: note:   candidate expects 1 argument, 0 provided
/usr/include/c++/9/bits/functional_hash.h:101:12: error: ‘std::__hash_enum<_Tp, <anonymous> >::~__hash_enum() [with _Tp = Unit; bool <anonymous> = false]’ is private within this context
  101 |     struct hash : __hash_enum<_Tp>
      |            ^~~~
/usr/include/c++/9/bits/functional_hash.h:83:7: note: declared private here
   83 |       ~__hash_enum();
      |       ^
In file included from /usr/include/c++/9/bits/hashtable.h:35,
                 from /usr/include/c++/9/unordered_map:46,
                 from unit_handler.h:4,
                 from unit_handler.cpp:1:
/usr/include/c++/9/bits/hashtable_policy.h:1096:7: error: use of deleted function ‘std::hash<Unit>::~hash()’
 1096 |       _Hashtable_ebo_helper() = default;
      |       ^~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/9/string_view:43,
                 from /usr/include/c++/9/bits/basic_string.h:48,
                 from /usr/include/c++/9/string:55,
                 from /usr/include/c++/9/stdexcept:39,
                 from /usr/include/c++/9/optional:38,
                 from /usr/include/c++/9/bits/node_handle.h:39,
                 from /usr/include/c++/9/bits/stl_tree.h:72,
                 from /usr/include/c++/9/map:60,
                 from unit_handler.h:3,
                 from unit_handler.cpp:1:
/usr/include/c++/9/bits/functional_hash.h:101:12: note: ‘std::hash<Unit>::~hash()’ is implicitly deleted because the default definition would be ill-formed:
  101 |     struct hash : __hash_enum<_Tp>
      |            ^~~~
/usr/include/c++/9/bits/functional_hash.h:101:12: error: ‘std::__hash_enum<_Tp, <anonymous> >::~__hash_enum() [with _Tp = Unit; bool <anonymous> = false]’ is private within this context
/usr/include/c++/9/bits/functional_hash.h:83:7: note: declared private here
   83 |       ~__hash_enum();
      |       ^
In file included from /usr/include/c++/9/bits/hashtable.h:35,
                 from /usr/include/c++/9/unordered_map:46,
                 from unit_handler.h:4,
                 from unit_handler.cpp:1:
/usr/include/c++/9/bits/hashtable_policy.h:1373:7: error: use of deleted function ‘std::__detail::_Hashtable_ebo_helper<1, std::hash<Unit>, true>::~_Hashtable_ebo_helper()’
 1373 |       _Hash_code_base() = default;
      |       ^~~~~~~~~~~~~~~
/usr/include/c++/9/bits/hashtable_policy.h:1093:12: note: ‘std::__detail::_Hashtable_ebo_helper<1, std::hash<Unit>, true>::~_Hashtable_ebo_helper()’ is implicitly deleted because the default definition would be ill-formed:
 1093 |     struct _Hashtable_ebo_helper<_Nm, _Tp, true>
      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/9/bits/hashtable_policy.h:1093:12: error: use of deleted function ‘std::hash<Unit>::~hash()’
/usr/include/c++/9/bits/hashtable_policy.h:1822:5: error: use of deleted function ‘std::__detail::_Hash_code_base<Unit, std::pair<const Unit, int>, std::__detail::_Select1st, std::hash<Unit>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::~_Hash_code_base()’
 1822 |     _Hashtable_base() = default;
      |     ^~~~~~~~~~~~~~~
/usr/include/c++/9/bits/hashtable_policy.h:1346:12: note: ‘std::__detail::_Hash_code_base<Unit, std::pair<const Unit, int>, std::__detail::_Select1st, std::hash<Unit>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::~_Hash_code_base()’ is implicitly deleted because the default definition would be ill-formed:
 1346 |     struct _Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2,
      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1347 |       _Default_ranged_hash, true>
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/9/bits/hashtable_policy.h:1346:12: error: use of deleted function ‘std::__detail::_Hashtable_ebo_helper<1, std::hash<Unit>, true>::~_Hashtable_ebo_helper()’
In file included from /usr/include/c++/9/unordered_map:46,
                 from unit_handler.h:4,
                 from unit_handler.cpp:1:
/usr/include/c++/9/bits/hashtable.h:414:7: error: use of deleted function ‘std::__detail::_Hashtable_base<Unit, std::pair<const Unit, int>, std::__detail::_Select1st, std::equal_to<Unit>, std::hash<Unit>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<true, false, false> >::~_Hashtable_base()’
  414 |       _Hashtable() = default;
      |       ^~~~~~~~~~
In file included from /usr/include/c++/9/bits/hashtable.h:35,
                 from /usr/include/c++/9/unordered_map:46,
                 from unit_handler.h:4,
                 from unit_handler.cpp:1:
/usr/include/c++/9/bits/hashtable_policy.h:1770:10: note: ‘std::__detail::_Hashtable_base<Unit, std::pair<const Unit, int>, std::__detail::_Select1st, std::equal_to<Unit>, std::hash<Unit>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<true, false, false> >::~_Hashtable_base()’ is implicitly deleted because the default definition would be ill-formed:
 1770 |   struct _Hashtable_base
      |          ^~~~~~~~~~~~~~~
/usr/include/c++/9/bits/hashtable_policy.h:1770:10: error: use of deleted function ‘std::__detail::_Hash_code_base<Unit, std::pair<const Unit, int>, std::__detail::_Select1st, std::hash<Unit>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::~_Hash_code_base()’
unit_handler.cpp: In member function ‘void UnitHandler::next_frame()’:
unit_handler.cpp:55:54: error: passing ‘const Unit’ as ‘this’ argument discards qualifiers [-fpermissive]
   55 |         if (it->second == 1 && (it->first).is_worker())
      |                                                      ^
In file included from unit_handler.h:6,
                 from unit_handler.cpp:1:
unit.h:59:10: note:   in call to ‘bool Unit::is_worker()’
   59 |     bool is_worker();
      |          ^~~~~~~~~
In file included from /usr/include/c++/9/unordered_map:46,
                 from unit_handler.h:4,
                 from unit_handler.cpp:1:
/usr/include/c++/9/bits/hashtable.h: In instantiation of ‘std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = Unit; _Value = std::pair<const Unit, int>; _Alloc = std::allocator<std::pair<const Unit, int> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<Unit>; _H1 = std::hash<Unit>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, false>]’:
/usr/include/c++/9/bits/unordered_map.h:1250:11:   required from here
/usr/include/c++/9/bits/hashtable.h:1354:5: error: use of deleted function ‘std::__detail::_Hashtable_base<Unit, std::pair<const Unit, int>, std::__detail::_Select1st, std::equal_to<Unit>, std::hash<Unit>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<true, false, false> >::~_Hashtable_base()’
 1354 |     }
      |     ^
In file included from /usr/include/c++/9/bits/hashtable.h:35,
                 from /usr/include/c++/9/unordered_map:46,
                 from unit_handler.h:4,
                 from unit_handler.cpp:1:
/usr/include/c++/9/bits/hashtable_policy.h: In instantiation of ‘std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true>::__hash_code std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true>::_M_hash_code(const _Key&) const [with _Key = Unit; _Value = std::pair<const Unit, int>; _ExtractKey = std::__detail::_Select1st; _H1 = std::hash<Unit>; _H2 = std::__detail::_Mod_range_hashing; std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true>::__hash_code = long unsigned int]’:
/usr/include/c++/9/bits/hashtable.h:1481:19:   required from ‘std::pair<typename std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>::iterator, typename std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>::iterator> std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::equal_range(const key_type&) [with _Key = Unit; _Value = std::pair<const Unit, int>; _Alloc = std::allocator<std::pair<const Unit, int> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to<Unit>; _H1 = std::hash<Unit>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, false>; typename std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>::iterator = std::__detail::_Node_iterator<std::pair<const Unit, int>, false, true>; std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::key_type = Unit]’
/usr/include/c++/9/bits/unordered_map.h:1852:36:   required from ‘std::pair<typename std::_Hashtable<_Key, std::pair<const _Key, _Tp>, _Alloc, std::__detail::_Select1st, _Pred, _Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<std::__not_<std::__and_<std::__is_fast_hash<_Hash>, std::__is_nothrow_invocable<const _Hash&, const _Key&> > >::value, false, false> >::iterator, typename std::_Hashtable<_Key, std::pair<const _Key, _Tp>, _Alloc, std::__detail::_Select1st, _Pred, _Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<std::__not_<std::__and_<std::__is_fast_hash<_Hash>, std::__is_nothrow_invocable<const _Hash&, const _Key&> > >::value, false, false> >::iterator> std::unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc>::equal_range(const key_type&) [with _Key = Unit; _Tp = int; _Hash = std::hash<Unit>; _Pred = std::equal_to<Unit>; _Alloc = std::allocator<std::pair<const Unit, int> >; typename std::_Hashtable<_Key, std::pair<const _Key, _Tp>, _Alloc, std::__detail::_Select1st, _Pred, _Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<std::__not_<std::__and_<std::__is_fast_hash<_Hash>, std::__is_nothrow_invocable<const _Hash&, const _Key&> > >::value, false, false> >::iterator = std::__detail::_Node_iterator<std::pair<const Unit, int>, false, true>; std::unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc>::key_type = Unit]’
unit_handler.cpp:66:55:   required from here
/usr/include/c++/9/bits/hashtable_policy.h:1382:16: error: static assertion failed: hash function must be invocable with an argument of key type
 1382 |  static_assert(__is_invocable<const _H1&, const _Key&>{},
      |                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/9/bits/hashtable_policy.h:1384:16: error: no match for call to ‘(const std::hash<Unit>) (const Unit&)’
 1384 |  return _M_h1()(__k);
      |         ~~~~~~~^~~~~
